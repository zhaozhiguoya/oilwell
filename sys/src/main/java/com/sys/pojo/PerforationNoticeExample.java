package com.sys.pojo;

import java.util.ArrayList;
import java.util.List;

public class PerforationNoticeExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public PerforationNoticeExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andRwIdIsNull() {
			addCriterion("rw_id is null");
			return (Criteria) this;
		}

		public Criteria andRwIdIsNotNull() {
			addCriterion("rw_id is not null");
			return (Criteria) this;
		}

		public Criteria andRwIdEqualTo(Integer value) {
			addCriterion("rw_id =", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdNotEqualTo(Integer value) {
			addCriterion("rw_id <>", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdGreaterThan(Integer value) {
			addCriterion("rw_id >", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("rw_id >=", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdLessThan(Integer value) {
			addCriterion("rw_id <", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdLessThanOrEqualTo(Integer value) {
			addCriterion("rw_id <=", value, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdIn(List<Integer> values) {
			addCriterion("rw_id in", values, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdNotIn(List<Integer> values) {
			addCriterion("rw_id not in", values, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdBetween(Integer value1, Integer value2) {
			addCriterion("rw_id between", value1, value2, "rwId");
			return (Criteria) this;
		}

		public Criteria andRwIdNotBetween(Integer value1, Integer value2) {
			addCriterion("rw_id not between", value1, value2, "rwId");
			return (Criteria) this;
		}

		public Criteria andWiIdIsNull() {
			addCriterion("wi_id is null");
			return (Criteria) this;
		}

		public Criteria andWiIdIsNotNull() {
			addCriterion("wi_id is not null");
			return (Criteria) this;
		}

		public Criteria andWiIdEqualTo(Integer value) {
			addCriterion("wi_id =", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdNotEqualTo(Integer value) {
			addCriterion("wi_id <>", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdGreaterThan(Integer value) {
			addCriterion("wi_id >", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("wi_id >=", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdLessThan(Integer value) {
			addCriterion("wi_id <", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdLessThanOrEqualTo(Integer value) {
			addCriterion("wi_id <=", value, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdIn(List<Integer> values) {
			addCriterion("wi_id in", values, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdNotIn(List<Integer> values) {
			addCriterion("wi_id not in", values, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdBetween(Integer value1, Integer value2) {
			addCriterion("wi_id between", value1, value2, "wiId");
			return (Criteria) this;
		}

		public Criteria andWiIdNotBetween(Integer value1, Integer value2) {
			addCriterion("wi_id not between", value1, value2, "wiId");
			return (Criteria) this;
		}

		public Criteria andDemoIsNull() {
			addCriterion("demo is null");
			return (Criteria) this;
		}

		public Criteria andDemoIsNotNull() {
			addCriterion("demo is not null");
			return (Criteria) this;
		}

		public Criteria andDemoEqualTo(String value) {
			addCriterion("demo =", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoNotEqualTo(String value) {
			addCriterion("demo <>", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoGreaterThan(String value) {
			addCriterion("demo >", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoGreaterThanOrEqualTo(String value) {
			addCriterion("demo >=", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoLessThan(String value) {
			addCriterion("demo <", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoLessThanOrEqualTo(String value) {
			addCriterion("demo <=", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoLike(String value) {
			addCriterion("demo like", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoNotLike(String value) {
			addCriterion("demo not like", value, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoIn(List<String> values) {
			addCriterion("demo in", values, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoNotIn(List<String> values) {
			addCriterion("demo not in", values, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoBetween(String value1, String value2) {
			addCriterion("demo between", value1, value2, "demo");
			return (Criteria) this;
		}

		public Criteria andDemoNotBetween(String value1, String value2) {
			addCriterion("demo not between", value1, value2, "demo");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table perforation_notice
	 * @mbg.generated  Wed Aug 14 20:27:46 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table perforation_notice
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 14 20:26:56 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}